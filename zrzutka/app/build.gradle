apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 23
    buildToolsVersion "24.0.1"

    defaultConfig {
        applicationId "trzye.zrzutka"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    dataBinding{
        enabled = true
    }

//    configurations.all {
//        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
//    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    kapt "com.android.databinding:compiler:$android_plugin_version"
    compile 'org.springframework.android:spring-android-rest-template:2.0.0.M3'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:support-v4:23.4.0'
    compile 'com.android.support:design:23.4.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.j256.ormlite:ormlite-core:5.0'
    compile 'com.j256.ormlite:ormlite-android:5.0'
    compile 'org.eclipse.persistence:javax.persistence:2.0.0'
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.android.support:cardview-v7:23.0.+'
    testCompile 'junit:junit:4.12'

    compile 'com.itextpdf:itextpdf:5.5.12'
    // https://mvnrepository.com/artifact/com.itextpdf.tool/xmlworker
    compile group: 'com.itextpdf.tool', name: 'xmlworker', version: '5.5.12'


//    // https://mvnrepository.com/artifact/com.itextpdf/itextpdf
//    compile group: 'com.itextpdf', name: 'typography', version: '1.0.3'
//    compile group: 'com.itextpdf', name: 'zugferd', version: '1.0.1'
//    compile group: 'com.itextpdf', name: 'html2pdf', version: '1.0.1'
////    compile group: 'com.itextpdf', name: 'pdfxfa', version: '1.0.2'
//    compile group: 'com.itextpdf', name: 'itext-licensekey', version: '2.0.4'





    compile 'org.jooq:jooq:3.6.4'
    //Needed for @Generated annotation
    compile 'javax.annotation:javax.annotation-api:1.2'
    compile 'org.sqldroid:sqldroid:1.0.3'
    compile 'com.readystatesoftware.sqliteasset:sqliteassethelper:2.0.1'

//    compile group: 'com.googlecode.owasp-java-html-sanitizer', name: 'owasp-java-html-sanitizer', version: 'r239'

}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'org.jooq:jooq-codegen:3.6.4'
        classpath 'org.xerial:sqlite-jdbc:3.8.11.2'
    }
}
//
//kapt {
//    generateStubs = true
//}

repositories {
    mavenCentral()
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
//    maven {
//        url 'https://repo.itextsupport.com/releases'
//        name 'iText Repository - releases'
//    }
}

task generate << {
    // Use your favourite XML builder to construct the code generation configuration file
// ----------------------------------------------------------------------------------
    def writer = new StringWriter()
    def xml = new groovy.xml.MarkupBuilder(writer)
            .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.6.0.xsd') {
        jdbc() {
            driver('org.sqlite.JDBC')
            url("jdbc:sqlite:$projectDir/src/main/assets/databases/node.db")
            /*user('sa')
            password('')*/
        }
        generator() {
            database() {
            }

            // Watch out for this caveat when using MarkupBuilder with "reserved names"
            // - https://github.com/jOOQ/jOOQ/issues/4797
            // - http://stackoverflow.com/a/11389034/521799
            // - https://groups.google.com/forum/#!topic/jooq-user/wi4S9rRxk4A
            generate([:]) {
                deprecated false
                pojos true
                daos true
            }
            target() {
                packageName('trzye.zrzutka.jooq.model')
                directory("$buildDir/generated/source/jooq")
            }
        }
    }

// Run the code generator
// ----------------------
    org.jooq.util.GenerationTool.generate(
            javax.xml.bind.JAXB.unmarshal(new StringReader(writer.toString()), org.jooq.util.jaxb.Configuration.class)
    )
}
