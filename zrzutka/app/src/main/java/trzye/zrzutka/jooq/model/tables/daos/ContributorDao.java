/**
 * This class is generated by jOOQ
 */
package trzye.zrzutka.jooq.model.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import trzye.zrzutka.jooq.model.tables.Contributor;
import trzye.zrzutka.jooq.model.tables.records.ContributorRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContributorDao extends DAOImpl<ContributorRecord, trzye.zrzutka.jooq.model.tables.pojos.Contributor, Integer> {

	/**
	 * Create a new ContributorDao without any configuration
	 */
	public ContributorDao() {
		super(Contributor.CONTRIBUTOR, trzye.zrzutka.jooq.model.tables.pojos.Contributor.class);
	}

	/**
	 * Create a new ContributorDao with an attached configuration
	 */
	public ContributorDao(Configuration configuration) {
		super(Contributor.CONTRIBUTOR, trzye.zrzutka.jooq.model.tables.pojos.Contributor.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(trzye.zrzutka.jooq.model.tables.pojos.Contributor object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>contribution_id IN (values)</code>
	 */
	public List<trzye.zrzutka.jooq.model.tables.pojos.Contributor> fetchByContributionId(Long... values) {
		return fetch(Contributor.CONTRIBUTOR.CONTRIBUTION_ID, values);
	}

	/**
	 * Fetch records that have <code>friend_id IN (values)</code>
	 */
	public List<trzye.zrzutka.jooq.model.tables.pojos.Contributor> fetchByFriendId(Long... values) {
		return fetch(Contributor.CONTRIBUTOR.FRIEND_ID, values);
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<trzye.zrzutka.jooq.model.tables.pojos.Contributor> fetchById(Integer... values) {
		return fetch(Contributor.CONTRIBUTOR.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public trzye.zrzutka.jooq.model.tables.pojos.Contributor fetchOneById(Integer value) {
		return fetchOne(Contributor.CONTRIBUTOR.ID, value);
	}
}
