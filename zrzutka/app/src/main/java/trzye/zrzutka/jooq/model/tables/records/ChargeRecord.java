/**
 * This class is generated by jOOQ
 */
package trzye.zrzutka.jooq.model.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import trzye.zrzutka.jooq.model.tables.Charge;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChargeRecord extends UpdatableRecordImpl<ChargeRecord> implements Record6<Long, Long, Long, Long, Integer, Long> {

	private static final long serialVersionUID = -647302282;

	/**
	 * Setter for <code>charge.amountPaid</code>.
	 */
	public void setAmountpaid(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>charge.amountPaid</code>.
	 */
	public Long getAmountpaid() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>charge.amountToPay</code>.
	 */
	public void setAmounttopay(Long value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>charge.amountToPay</code>.
	 */
	public Long getAmounttopay() {
		return (Long) getValue(1);
	}

	/**
	 * Setter for <code>charge.chargeUniqueNumberForSorting</code>.
	 */
	public void setChargeuniquenumberforsorting(Long value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>charge.chargeUniqueNumberForSorting</code>.
	 */
	public Long getChargeuniquenumberforsorting() {
		return (Long) getValue(2);
	}

	/**
	 * Setter for <code>charge.charged_id</code>.
	 */
	public void setChargedId(Long value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>charge.charged_id</code>.
	 */
	public Long getChargedId() {
		return (Long) getValue(3);
	}

	/**
	 * Setter for <code>charge.id</code>.
	 */
	public void setId(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>charge.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>charge.purchase_id</code>.
	 */
	public void setPurchaseId(Long value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>charge.purchase_id</code>.
	 */
	public Long getPurchaseId() {
		return (Long) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Long, Long, Long, Long, Integer, Long> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Long, Long, Long, Long, Integer, Long> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return Charge.CHARGE.AMOUNTPAID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field2() {
		return Charge.CHARGE.AMOUNTTOPAY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field3() {
		return Charge.CHARGE.CHARGEUNIQUENUMBERFORSORTING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field4() {
		return Charge.CHARGE.CHARGED_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return Charge.CHARGE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field6() {
		return Charge.CHARGE.PURCHASE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getAmountpaid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value2() {
		return getAmounttopay();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value3() {
		return getChargeuniquenumberforsorting();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value4() {
		return getChargedId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value6() {
		return getPurchaseId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChargeRecord value1(Long value) {
		setAmountpaid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChargeRecord value2(Long value) {
		setAmounttopay(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChargeRecord value3(Long value) {
		setChargeuniquenumberforsorting(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChargeRecord value4(Long value) {
		setChargedId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChargeRecord value5(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChargeRecord value6(Long value) {
		setPurchaseId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChargeRecord values(Long value1, Long value2, Long value3, Long value4, Integer value5, Long value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ChargeRecord
	 */
	public ChargeRecord() {
		super(Charge.CHARGE);
	}

	/**
	 * Create a detached, initialised ChargeRecord
	 */
	public ChargeRecord(Long amountpaid, Long amounttopay, Long chargeuniquenumberforsorting, Long chargedId, Integer id, Long purchaseId) {
		super(Charge.CHARGE);

		setValue(0, amountpaid);
		setValue(1, amounttopay);
		setValue(2, chargeuniquenumberforsorting);
		setValue(3, chargedId);
		setValue(4, id);
		setValue(5, purchaseId);
	}
}
