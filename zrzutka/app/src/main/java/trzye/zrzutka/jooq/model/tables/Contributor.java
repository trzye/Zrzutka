/**
 * This class is generated by jOOQ
 */
package trzye.zrzutka.jooq.model.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import trzye.zrzutka.jooq.model.DefaultSchema;
import trzye.zrzutka.jooq.model.Keys;
import trzye.zrzutka.jooq.model.tables.records.ContributorRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Contributor extends TableImpl<ContributorRecord> {

	private static final long serialVersionUID = 501724354;

	/**
	 * The reference instance of <code>contributor</code>
	 */
	public static final Contributor CONTRIBUTOR = new Contributor();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ContributorRecord> getRecordType() {
		return ContributorRecord.class;
	}

	/**
	 * The column <code>contributor.contribution_id</code>.
	 */
	public final TableField<ContributorRecord, Long> CONTRIBUTION_ID = createField("contribution_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>contributor.friend_id</code>.
	 */
	public final TableField<ContributorRecord, Long> FRIEND_ID = createField("friend_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>contributor.id</code>.
	 */
	public final TableField<ContributorRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>contributor</code> table reference
	 */
	public Contributor() {
		this("contributor", null);
	}

	/**
	 * Create an aliased <code>contributor</code> table reference
	 */
	public Contributor(String alias) {
		this(alias, CONTRIBUTOR);
	}

	private Contributor(String alias, Table<ContributorRecord> aliased) {
		this(alias, aliased, null);
	}

	private Contributor(String alias, Table<ContributorRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ContributorRecord> getPrimaryKey() {
		return Keys.PK_CONTRIBUTOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ContributorRecord>> getKeys() {
		return Arrays.<UniqueKey<ContributorRecord>>asList(Keys.PK_CONTRIBUTOR);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Contributor as(String alias) {
		return new Contributor(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Contributor rename(String name) {
		return new Contributor(name, null);
	}
}
